REM PX-LUA Class
DEF CLASS "lua" CREATE REQUIRED DELETE REQUIRED 
LOCAL DLL_FILENAME$="LUA51.DLL"
LOCAL LUA51
LOCAL LUA_STATE
REM convience functions...
FUNCTION EXEC_FILE(FILENAME$)EXEC_FILE
FUNCTION EXEC_STRING(FILENAME$)EXEC_STRING
REM public functions...
FUNCTION LOAD_FILE(FILENAME$)LOAD_FILE
FUNCTION LOAD_STRING(FILENAME$)LOAD_STRING
FUNCTION RUN_LOADED(LOAD_RESULT)CALL_STACK
FUNCTION TEST_ADD(X,Y)TEST_ADD
REM private functions...
FUNCTION LOCAL HIDE LUA_GETGLOBAL(NAME$)LUA_GETGLOBAL
FUNCTION LOCAL HIDE LUA_POP(NUMBER_OF_ELEMENTS)LUA_POP
END DEF
ON_CREATE:
LET LUA51=DLL(ADDR "LUA51.DLL") REM load the dll
LET LUA_STATE=DLL(LUA51,"luaL_newstate") REM create a new state
LET IGNORE=DLL(LUA51,"luaL_openlibs",LUA_STATE) REM open the standard libraries
RETURN 
ON_DELETE:
LET IGNORE=DLL(LUA51,"lua_close",LUA_STATE) REM close the lua state
RETURN 
! 
! 
! 
REM convience functions...
EXEC_FILE:
ENTER FILENAME$
RETURN _OBJ'RUN_LOADED(_OBJ'LOAD_FILE(FILENAME$))
! 
! 
! 
EXEC_STRING:
ENTER STRING$
RETURN _OBJ'RUN_LOADED(_OBJ'LOAD_STRING(STRING$))
! 
! 
! 
REM public functions...
LOAD_FILE:
ENTER FILENAME$
RETURN DLL(LUA51,"luaL_loadfile",LUA_STATE,FILENAME$)
! 
! 
! 
LOAD_STRING:
ENTER STRING$
RETURN DLL(LUA51,"luaL_loadstring",LUA_STATE,STRING$)
! 
! 
! 
CALL_STACK:
ENTER LOAD_RESULT
IF LOAD_RESULT=0 THEN LOCAL CALL_RESULT=DLL(LUA51,"lua_pcall",LUA_STATE,0,-1,0) ELSE LET IGNORE=DLL(LUA51,"lua_load_result_not_null")
RETURN CALL_RESULT
! 
! 
! 
TEST_ADD:
ENTER X,Y
_OBJ'EXEC_STRING("return add("+STR(X)+","+STR(Y)+")")
PRINT DLL(LUA51,"lua_tointeger",LUA_STATE,-1)
_OBJ'LUA_POP(1)
RETURN 
! 
! 
! 
LUA_GETGLOBAL:
ENTER NAME$
LET IGNORE=DLL(LUA51,"lua_getfield",LUA_STATE,-10002,NAME$)
RETURN 
! 
! 
! 
LUA_POP:
ENTER NUMBER_OF_ELEMENTS
RETURN DLL(LUA51,"lua_settop",LUA_STATE,((NUMBER_OF_ELEMENTS-1)*-1))
! 
! 
! 
! 
! 
! 
! 
! 
! 
! 
! 
! 
! 
! 
! 
